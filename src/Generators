"""A generator is an object that produces a sequence of values. It can be used as an iterator,
 which means that you can use it with a for statement, or use the next function to get the next value.
    However, you can iterate over the values only once.
A generator can be created using a function that uses the yield keyword to generate a value. When a generator function is called, a generator object is created.
generate values lazily and efficiently """

def my_generator():
    yield 1
    yield 2
    yield 3
    yield 4

gen = my_generator()
for value in gen:
    print(value)


def square_numbers(n):
    for i in range(n):
        yield i ** 2


# Example usage:
for square in square_numbers(5):
    print(square)



# gen = (x ** 2 for x in range(5))
# for value in gen:
#     print(value)

